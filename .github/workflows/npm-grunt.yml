name: Project Delivery

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build:
    name: 📦 Build project
    runs-on: ubuntu-latest
    steps:
      - name: Install Node.js
        uses: actions/checkout@v3
      - name: Install NPM dependencies
        run: npm install
      - name: Build project
        run: npm run build --if-present
      - name: Run lint
        run: npm run lint

  Test:
    name: 🐛 Unit Tests
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      #- name: Use Node.js
      #  uses: actions/setup-node@v3
      #  with:
      #    node-version: '14.x'
      #- name: Run Jest
      #  uses: stefanoeb/jest-action@1.0.3
      #- name: Run tests
      #  run: npm run test

  SecurityScan:
    name: 🧹 Njsscan Check
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Scan project with NodeJsScan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '.'

  SonarQube:
    name: 🧹 SonarQube
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Chekout Project
        uses: actions/checkout@v3

  Release:
    name: 🧰 Release
    runs-on: ubuntu-latest
    environment: DEV
    #needs: [ Test, SecurityScan, SonarQube ]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          token: ${{ env.PAT }}
          fetch-depth: '0'
        env:
          PAT: ${{ secrets.CI_PAT }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '12.x'

      - name: Git Setting
        run: |
          git config --global user.email $USER_EMAIL
          git config --global user.name $USERNAME
        env:
          USER_EMAIL: ${{ secrets.CI_USER_EMAIL }}
          USERNAME: ${{ secrets.CI_USERNAME }}

      - name: Get current version
        run: echo "CURRENT_VERSION=$(grep version package.json | awk -F \" '{print $4}')" >> $GITHUB_ENV

      - name: Create new Tag for the new release in master branch
        uses: rickstaa/action-create-tag@v1
        with:
          token: ${{ env.PAT }}
          tag: ${{ env.CURRENT_VERSION }}

      - name: Switch to dev branch
        run: |
          git checkout dev
          git pull

      - name: Update project version
        run: npm version minor --git-tag-version false

      - name: Commit modification
        run: |
          git add .
          git commit -m "Release " $CURRENT_VERSION
          git push

  Deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [ Release ]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
